class Solution1 {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {        
        HashMap<Integer, Integer> map = new HashMap<>();
        Stack<Integer> stack = new Stack<>();
        for (int n : nums2) {
            // n is the next greater integer for any smaller integers in the stack
            while (!stack.isEmpty() && stack.peek()<n) {
                map.put(stack.pop(), n);
            }
            stack.push(n);
        }
        int[] sols = new int[nums1.length];
        for (int i=0; i<nums1.length; i++) {
            sols[i] = map.getOrDefault(nums1[i], -1);
        }
        return sols;
    }
}

class Solution2 {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        if (nums1==null || nums1.length==0) return new int[0];
        int[] sols = new int[nums1.length];
        for (int j=0; j<nums1.length; j++){
            int n = nums1[j];
            int index = 0;
            for (int i=0; i<nums2.length; i++){
                if (nums2[i]==n) {
                    index = i;
                    break;
                }
            }
            int sol = -1;
            for (int i=index; i<nums2.length; i++){
                if (nums2[i]>n){
                    sol = nums2[i];
                    break;
                }
            }
            sols[j] = sol;
        }
        return sols;
    }
}
